# convert rank model encoding to model genotype
rank_0 = [[1, 1],
         [1, 1, 1, 1],
         [1, 1, 0, 1],
         [1, 0, 1, 1],
         [1, 1, 0, 1]]

rank_10 = [[1, 1],
          [1, 0, 3, 1],
          [1, 3, 0, 1],
          [1, 1, 1, 0],
          [3, 0, 1, 1]]
rank_20 = [[1, 0],
           [1, 2, 3, 1],
           [1, 3, 1, 1],
           [1, 2, 2, 1],
           [3, 1, 3, 1]]
rank_30 = [[1, 0],
[3, 1, 1, 0],
[1, 2, 2, 0],
[1, 0, 0, 0],
[3, 0, 2, 1]]

rank_40 = [[0, 1],
           [3, 1, 0, 0],
           [3, 2, 0, 1],
           [3, 0, 1, 1],
           [0, 3, 0, 1]]
rank_50 = [[0, 0],
           [3, 0, 2, 1],
           [3, 1, 2, 0],
           [3, 3, 1, 1],
           [0, 0, 3, 1]]
rank_60 = [[0, 0],
[3, 2, 3, 1],
[3, 3, 3, 1],
[0, 0, 1, 0],
[0, 0, 0, 1]]
rank_70 = [[3, 1],
[2, 1, 1, 1],
[1, 0, 1, 2],
[2, 1, 0, 1],
[3, 2, 1, 0]]

rank_80 = [[2, 1],
           [0, 3, 3, 1],
           [1, 0, 3, 3],
           [3, 2, 0, 1],
           [0, 2, 2, 1]]
rank_90 = [[2, 1],
           [2, 1, 3, 1],
           [1, 2, 2, 3],
           [2, 0, 3, 1],
           [1, 2, 0, 0]]
rank_100 = [[3, 0],
            [0, 0, 0, 0],
            [0, 1, 0, 0],
            [2, 3, 2, 1],
            [3, 0, 2, 0]]
rank_110 = [[3, 0],
            [3, 2, 2, 0],
            [3, 0, 1, 3],
            [2, 0, 2, 1],
            [0, 0, 3, 0]]
rank_120 =[[2, 0],
[0, 3, 2, 0],
[0, 0, 2, 0],
[1, 1, 1, 2],
[0, 0, 0, 0]]

rank_130 = [[1, 3],
            [2, 3, 2, 1],
            [0, 2, 0, 1],
            [1, 1, 2, 3],
            [1, 1, 0, 3]]
rank_140 = [[1, 3],
            [3, 1, 0, 3],
            [0, 2, 0, 0],
            [1, 2, 3, 3],
            [1, 3, 3, 3]]
rank_150 =[[1, 2],
[0, 2, 2, 0],
[0, 3, 3, 0],
[1, 0, 0, 2],
[1, 3, 1, 2]]

rank_160 = [[0, 3],
            [2, 0, 2, 0],
            [2, 1, 0, 1],
            [1, 0, 2, 2],
            [3, 2, 3, 3]]
rank_170 = [[0, 3],
            [0, 0, 1, 3],
            [2, 0, 3, 1],
            [0, 3, 1, 2],
            [0, 1, 0, 3]]
rank_180 = [[0, 2],
            [3, 2, 0, 3],
            [2, 3, 1, 1],
            [3, 1, 3, 3],
            [0, 2, 1, 3]]
rank_190 = [[0, 2],
            [3, 0, 3, 2],
            [2, 3, 2, 0],
            [3, 2, 1, 3],
            [0, 3, 0, 3]]
rank_200 = [[3, 3],
[0, 0, 3, 3],
[0, 1, 2, 3],
[3, 3, 3, 3],
[1, 0, 0, 2]]
rank_220 = [[3, 2],
            [2, 1, 3, 3],
            [2, 1, 0, 2],
            [0, 2, 2, 3],
            [0, 0, 2, 3]]
rank_250 = [[2, 2],
            [2, 2, 0, 2],
            [2, 3, 2, 3],
            [2, 0, 0, 2],
            [0, 0, 2, 2]]

epoch_0 = [[3, 2],
           [2, 1, 0, 2], 
           [0, 0, 0, 2], 
           [3, 2, 1, 1], 
           [1, 1, 0, 0]]
epoch_2 = [[1, 1], 
           [1, 1, 0, 1], 
           [1, 1, 0, 0], 
           [1, 1, 0, 1], 
           [3, 2, 1, 1]]
epoch_4 = [[1, 1], 
           [1, 1, 1, 1], 
           [1, 1, 0, 0], 
           [1, 1, 3, 1], 
           [3, 0, 1, 1]]
epoch_6 = [[1, 1], 
           [1, 1, 1, 1], 
           [1, 0, 0, 0], 
           [1, 3, 1, 1], 
           [1, 3, 1, 1]]
epoch_8 = [[1, 1], 
           [1, 1, 1, 1], 
           [1, 1, 0, 0], 
           [1, 1, 1, 1], 
           [1, 1, 0, 1]]

def converter(encoding):
    # seting table and model template
    table = {
        '0': (3, 6),  # k=3,e=6
        '1': (5, 6),
        '2': (3, 3),
        '3': (5, 3)
    }
    model_geno = [['ir_r1_k{}_s2_e{}_c24_se0.25', 'ir_r1_k{}_s1_e{}_c24_se0.25'],
                  ['ir_r1_k{}_s2_e{}_c40_se0.25', 'ir_r1_k{}_s1_e{}_c40_se0.25', 'ir_r1_k{}_s1_e{}_c40_se0.25',
                   'ir_r1_k{}_s1_e{}_c40_se0.25'],
                  ['ir_r1_k{}_s2_e{}_c80_se0.25', 'ir_r1_k{}_s1_e{}_c80_se0.25', 'ir_r1_k{}_s1_e{}_c80_se0.25',
                   'ir_r1_k{}_s1_e{}_c80_se0.25'],
                  ['ir_r1_k{}_s1_e{}_c112_se0.25', 'ir_r1_k{}_s1_e{}_c112_se0.25', 'ir_r1_k{}_s1_e{}_c112_se0.25',
                   'ir_r1_k{}_s1_e{}_c112_se0.25'],
                  ['ir_r1_k{}_s2_e{}_c192_se0.25', 'ir_r1_k{}_s1_e{}_c192_se0.25', 'ir_r1_k{}_s1_e{}_c192_se0.25',
                   'ir_r1_k{}_s1_e{}_c192_se0.25']]

    model = [['ds_r1_k3_s1_c16_se0.25']]
    for b_encoding, b_geno in zip(encoding,model_geno):
        block = []
        for num, geno in zip(b_encoding,b_geno):
            get_ke = table[str(num)]
            block.append(geno.format(get_ke[0],get_ke[1]))
        model.append(block)
    model.append(['ir_r1_k3_s1_e6_c320_se0.25'])
    return model

